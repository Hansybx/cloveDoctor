<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hansybx.clovedoctorbe.mapper.TradeMapper">
  <resultMap id="BaseResultMap" type="com.hansybx.clovedoctorbe.model.Trade">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userId" jdbcType="INTEGER" property="userId" />
    <result column="totalAmout" jdbcType="DECIMAL" property="totalAmout" />
    <result column="tradeNo" jdbcType="VARCHAR" property="tradeNo" />
    <result column="tradeStatus" jdbcType="INTEGER" property="tradeStatus" />
    <result column="tradeInfo" jdbcType="VARCHAR" property="tradeInfo" />
    <result column="tradeDate" jdbcType="VARCHAR" property="tradeDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, userId, totalAmout, tradeNo, tradeStatus, tradeInfo, tradeDate
  </sql>
  <select id="selectByExample" parameterType="com.hansybx.clovedoctorbe.model.TradeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from trade
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from trade
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from trade
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hansybx.clovedoctorbe.model.TradeExample">
    delete from trade
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hansybx.clovedoctorbe.model.Trade">
    insert into trade (id, userId, totalAmout, 
      tradeNo, tradeStatus, tradeInfo, 
      tradeDate)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{totalAmout,jdbcType=DECIMAL}, 
      #{tradeNo,jdbcType=VARCHAR}, #{tradeStatus,jdbcType=INTEGER}, #{tradeInfo,jdbcType=VARCHAR}, 
      #{tradeDate,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hansybx.clovedoctorbe.model.Trade">
    insert into trade
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        userId,
      </if>
      <if test="totalAmout != null">
        totalAmout,
      </if>
      <if test="tradeNo != null">
        tradeNo,
      </if>
      <if test="tradeStatus != null">
        tradeStatus,
      </if>
      <if test="tradeInfo != null">
        tradeInfo,
      </if>
      <if test="tradeDate != null">
        tradeDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="totalAmout != null">
        #{totalAmout,jdbcType=DECIMAL},
      </if>
      <if test="tradeNo != null">
        #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="tradeStatus != null">
        #{tradeStatus,jdbcType=INTEGER},
      </if>
      <if test="tradeInfo != null">
        #{tradeInfo,jdbcType=VARCHAR},
      </if>
      <if test="tradeDate != null">
        #{tradeDate,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hansybx.clovedoctorbe.model.TradeExample" resultType="java.lang.Long">
    select count(*) from trade
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update trade
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        userId = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.totalAmout != null">
        totalAmout = #{record.totalAmout,jdbcType=DECIMAL},
      </if>
      <if test="record.tradeNo != null">
        tradeNo = #{record.tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.tradeStatus != null">
        tradeStatus = #{record.tradeStatus,jdbcType=INTEGER},
      </if>
      <if test="record.tradeInfo != null">
        tradeInfo = #{record.tradeInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.tradeDate != null">
        tradeDate = #{record.tradeDate,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update trade
    set id = #{record.id,jdbcType=INTEGER},
      userId = #{record.userId,jdbcType=INTEGER},
      totalAmout = #{record.totalAmout,jdbcType=DECIMAL},
      tradeNo = #{record.tradeNo,jdbcType=VARCHAR},
      tradeStatus = #{record.tradeStatus,jdbcType=INTEGER},
      tradeInfo = #{record.tradeInfo,jdbcType=VARCHAR},
      tradeDate = #{record.tradeDate,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hansybx.clovedoctorbe.model.Trade">
    update trade
    <set>
      <if test="userId != null">
        userId = #{userId,jdbcType=INTEGER},
      </if>
      <if test="totalAmout != null">
        totalAmout = #{totalAmout,jdbcType=DECIMAL},
      </if>
      <if test="tradeNo != null">
        tradeNo = #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="tradeStatus != null">
        tradeStatus = #{tradeStatus,jdbcType=INTEGER},
      </if>
      <if test="tradeInfo != null">
        tradeInfo = #{tradeInfo,jdbcType=VARCHAR},
      </if>
      <if test="tradeDate != null">
        tradeDate = #{tradeDate,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hansybx.clovedoctorbe.model.Trade">
    update trade
    set userId = #{userId,jdbcType=INTEGER},
      totalAmout = #{totalAmout,jdbcType=DECIMAL},
      tradeNo = #{tradeNo,jdbcType=VARCHAR},
      tradeStatus = #{tradeStatus,jdbcType=INTEGER},
      tradeInfo = #{tradeInfo,jdbcType=VARCHAR},
      tradeDate = #{tradeDate,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>